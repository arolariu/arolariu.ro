{
  "name": "arolariu.ro-monorepo",
  "version": "1.0.0",
  "description": "Monorepo for arolariu.ro - Website, API, Components, and Documentation",
  "private": true,
  "engines": {
    "node": ">=22.8"
  },
  "scripts": {
    "help": "echo '\\nüìã Available Commands:\\n\\nüèóÔ∏è  Build Commands:\\n  npm run build          - Build all projects sequentially\\n  npm run build:parallel - Build projects in parallel\\n  npm run build:components - Build React component library\\n  npm run build:website  - Build Next.js website\\n  npm run build:docs     - Build DocFX documentation\\n  npm run build:api      - Build .NET API\\n\\nüßπ Maintenance Commands:\\n  npm run clean          - Clean all build artifacts\\n  npm run setup          - Install all dependencies\\n\\nüõ†Ô∏è  Development Commands:\\n  npm run dev:components - Start Storybook development server\\n  npm run test           - Run all tests\\n  npm run lint           - Lint all projects\\n  npm run format         - Format all projects\\n\\nüìä Utility Commands:\\n  npm run status         - Show build status across all projects\\n  npm run help           - Display this help\\n'",
    "setup": "echo 'üîß Installing dependencies...' && npm install --legacy-peer-deps && echo 'üîß Installing components dependencies...' && cd packages/components && npm install && echo 'üîß Installing website dependencies...' && cd ../../sites/arolariu.ro && npm install && cd ../../ && echo '‚úÖ Dependencies installed successfully!'",
    "clean": "echo 'üßπ Cleaning all build artifacts...' && npm run clean:components && npm run clean:website && npm run clean:docs && npm run clean:api && echo '‚úÖ All projects cleaned!'",
    "clean:components": "echo 'üì¶ Cleaning components...' && cd packages/components && (npm run build:clean 2>/dev/null || rm -rf dist) && echo '  ‚úÖ Components cleaned'",
    "clean:website": "echo 'üåê Cleaning website...' && cd sites/arolariu.ro && (npm run clean 2>/dev/null || rm -rf .next) && echo '  ‚úÖ Website cleaned'",
    "clean:docs": "echo 'üìö Cleaning docs...' && cd sites/docs.arolariu.ro && rm -rf _site api && echo '  ‚úÖ Documentation cleaned'",
    "clean:api": "echo '‚öôÔ∏è  Cleaning API...' && cd sites/api.arolariu.ro && (dotnet clean 2>/dev/null || echo '  ‚ö†Ô∏è  .NET not available') && echo '  ‚úÖ API cleaned'",
    "build": "echo 'üèóÔ∏è  Building all projects sequentially...' && npm run build:components && npm run build:website && npm run build:docs && npm run build:api && echo '‚úÖ All builds completed!'",
    "build:parallel": "echo 'üèóÔ∏è  Building projects in parallel...' && echo '‚ö†Ô∏è  Install concurrently first: npm install concurrently' && echo 'Then use: npx concurrently \"npm run build:components\" \"npm run build:website\" \"npm run build:docs\" \"npm run build:api\"'",
    "build:components": "echo 'üì¶ Building components...' && cd packages/components && npm run build && echo '‚úÖ Components built successfully!'",
    "build:website": "echo 'üåê Building website...' && cd sites/arolariu.ro && npm run build && echo '‚úÖ Website built successfully!'",
    "build:docs": "echo 'üìö Building documentation...' && cd sites/docs.arolariu.ro && (docfx docfx.json 2>/dev/null && echo '‚úÖ Documentation built successfully!') || echo '‚ö†Ô∏è  DocFX not available - install DocFX to build documentation'",
    "build:api": "echo '‚öôÔ∏è  Building API...' && cd sites/api.arolariu.ro && (dotnet build 2>/dev/null && echo '‚úÖ API built successfully!') || echo '‚ö†Ô∏è  .NET SDK not available - install .NET 9.0 SDK to build API'",
    "dev:components": "echo 'üöÄ Starting Storybook development server...' && cd packages/components && npm run storybook",
    "test": "echo 'üß™ Running all tests...' && npm run test:components && npm run test:website && echo '‚úÖ All tests completed!'",
    "test:components": "echo 'üì¶ Testing components...' && cd packages/components && echo '‚ö†Ô∏è  Component tests not configured yet'",
    "test:website": "echo 'üåê Testing website...' && cd sites/arolariu.ro && npm run test",
    "lint": "echo 'üîç Linting all projects...' && npm run lint:components && npm run lint:website && echo '‚úÖ All linting completed!'",
    "lint:components": "echo 'üì¶ Linting components...' && cd packages/components && echo '‚ö†Ô∏è  Component linting not configured yet'",
    "lint:website": "echo 'üåê Linting website...' && cd sites/arolariu.ro && npm run lint",
    "format": "echo 'üíÖ Formatting all projects...' && npm run format:components && npm run format:website && echo '‚úÖ All formatting completed!'",
    "format:components": "echo 'üì¶ Formatting components...' && cd packages/components && echo '‚ö†Ô∏è  Component formatting not configured yet'",
    "format:website": "echo 'üåê Formatting website...' && cd sites/arolariu.ro && npm run format",
    "status": "echo 'üìä Build Status Report:\\n' && echo 'üì¶ Components:' && (cd packages/components && ls -la dist 2>/dev/null | wc -l | xargs -I {} echo '  {} build artifacts found' || echo '  ‚ùå No build artifacts found') && echo 'üåê Website:' && (cd sites/arolariu.ro && ls -la .next 2>/dev/null | wc -l | xargs -I {} echo '  {} build artifacts found' || echo '  ‚ùå No build artifacts found') && echo 'üìö Documentation:' && (cd sites/docs.arolariu.ro && ls -la _site 2>/dev/null | wc -l | xargs -I {} echo '  {} build artifacts found' || echo '  ‚ùå No build artifacts found') && echo '‚öôÔ∏è  API:' && (cd sites/api.arolariu.ro && find . -name 'bin' -type d 2>/dev/null | wc -l | xargs -I {} echo '  {} build outputs found' || echo '  ‚ùå No build artifacts found')"
  },
  "devDependencies": {},
  "author": {
    "name": "Alexandru-Razvan Olariu",
    "email": "admin@arolariu.ro",
    "url": "https://arolariu.ro"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/arolariu/arolariu.ro"
  },
  "keywords": [
    "monorepo",
    "nextjs",
    "react",
    "dotnet",
    "docfx",
    "typescript"
  ]
}