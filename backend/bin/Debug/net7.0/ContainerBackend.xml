<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ContainerBackend</name>
    </assembly>
    <members>
        <member name="T:ContainerBackend.Domain.General.Services.ApplicationDIService">
            <summary>
            The application DI service.
            </summary>
        </member>
        <member name="M:ContainerBackend.Domain.General.Services.ApplicationDIService.AddGeneralApplicationConfiguration(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            The application DI service injection method.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:ContainerBackend.Domain.General.Services.BuilderDIService">
            <summary>
            The builder DI service.
            </summary>
        </member>
        <member name="M:ContainerBackend.Domain.General.Services.BuilderDIService.AddGeneralDomainConfiguration(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            The builder DI service for general domain configuration.
            </summary>
        </member>
        <member name="T:ContainerBackend.Domain.General.Services.KeyVault.IKeyVaultService">
            <summary>
            Interface that handles the Azure Key Vault integration.
            </summary>
        </member>
        <member name="M:ContainerBackend.Domain.General.Services.KeyVault.IKeyVaultService.GetSecret(System.String)">
            <summary>
            The method that fetches a Key Vault secret by name, synchronously.
            </summary>
            <param name="secretName"></param>
            <returns></returns>
        </member>
        <member name="M:ContainerBackend.Domain.General.Services.KeyVault.IKeyVaultService.GetSecretAsync(System.String)">
            <summary>
            The method that fetches a Key Vault secret by name, asynchronously.
            </summary>
            <param name="secretName"></param>
            <returns></returns>
        </member>
        <member name="T:ContainerBackend.Domain.General.Services.KeyVault.KeyVaultService">
            <summary>
            Service that handles the Azure Key Vault integration.
            This class is registered as a singleton in Domain\General\Services\BuilderDIService.cs.
            </summary>
        </member>
        <member name="M:ContainerBackend.Domain.General.Services.KeyVault.KeyVaultService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:ContainerBackend.Domain.General.Services.KeyVault.KeyVaultService.GetSecret(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ContainerBackend.Domain.General.Services.KeyVault.KeyVaultService.GetSecretAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ContainerBackend.Domain.Invoices.DTOs.PostedInvoiceDto">
            <summary>
            DTO for the received invoice via the HTTP POST request.
            </summary>
        </member>
        <member name="P:ContainerBackend.Domain.Invoices.DTOs.PostedInvoiceDto.InvoiceId">
            <summary>
            The invoice id.
            </summary>
        </member>
        <member name="P:ContainerBackend.Domain.Invoices.DTOs.PostedInvoiceDto.InvoiceBlobImage">
            <summary>
            The byte array of the invoice image.
            </summary>
        </member>
        <member name="P:ContainerBackend.Domain.Invoices.DTOs.PostedInvoiceDto.InvoiceDate">
            <summary>
            The invoice submitted date. (not to be confused with the invoice recognized date (OCR).)
            </summary>
        </member>
        <member name="T:ContainerBackend.Domain.Invoices.DTOs.RetrievedInvoiceDto">
            <summary>
            The retrieved invoice DTO, this is the invoice that is retrieved from the database.
            </summary>
        </member>
        <member name="P:ContainerBackend.Domain.Invoices.DTOs.RetrievedInvoiceDto.InvoiceId">
            <summary>
            The invoice id.
            </summary>
        </member>
        <member name="P:ContainerBackend.Domain.Invoices.DTOs.RetrievedInvoiceDto.CompressedInvoiceBlobImage">
            <summary>
            This is the retrieved compressed image of the invoice.
            </summary>
        </member>
        <member name="T:ContainerBackend.Domain.Invoices.Endpoints.InvoiceEndpoints">
            <summary>
            The invoice endpoints.
            </summary>
        </member>
        <member name="M:ContainerBackend.Domain.Invoices.Endpoints.InvoiceEndpoints.MapInvoiceEndpoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            The map invoice endpoints static method, called by the app builder.
            </summary>
            <param name="router"></param>
        </member>
        <member name="T:ContainerBackend.Domain.Invoices.Repos.InvoiceRepository">
            <summary>
            The Invoices repository.
            This repository contains all the methods to interact with the Invoices table in the database.
            </summary>
        </member>
        <member name="M:ContainerBackend.Domain.Invoices.Repos.InvoiceRepository.#ctor(System.Data.IDbConnection)">
            <summary>
            The main repository' constructor.
            </summary>
            <param name="dbConnection"></param>
        </member>
        <member name="M:ContainerBackend.Domain.Invoices.Repos.InvoiceRepository.InsertInvoice(System.Byte[])">
            <summary>
            Insert invoice into the database.
            </summary>
            <param name="blob"></param>
            <returns></returns>
        </member>
        <member name="T:ContainerBackend.Domain.Invoices.Services.InvoiceCompressionService">
            <summary>
            The invoice compression service.
            </summary>
        </member>
        <member name="M:ContainerBackend.Domain.Invoices.Services.InvoiceCompressionService.CompressStream(System.Byte[])">
            <summary>
            The compress stream method.
            </summary>
            <param name="blob"></param>
            <returns></returns>
        </member>
        <member name="T:ContainerBackend.Domain.Invoices.Services.InvoiceReaderService">
            <summary>
            Invoice reader service.
            </summary>
        </member>
        <member name="M:ContainerBackend.Domain.Invoices.Services.InvoiceReaderService.SendInvoiceForAnalysis(System.Byte[])">
            <summary>
            Send invoice for analysis.
            </summary>
            <param name="blob"></param>
            <returns></returns>
        </member>
        <member name="T:ContainerBackend.Program">
            <summary>
            The main backend program.cs file.
            The backend consists of a .NET 8.0 web application.
            The backend is a containerized application.
            The backend is deployed as a monolith.
            </summary>
        </member>
        <member name="M:ContainerBackend.Program.Main(System.String[])">
            <summary>
            The main method.
            </summary>
            <param name="args"></param>
        </member>
    </members>
</doc>
