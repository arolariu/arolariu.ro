name: "api-official-trigger"

permissions:
  id-token: write
  contents: read

defaults:
  run:
    working-directory: ./sites/api.arolariu.ro

on:
  push:
    branches: ["main"]
    paths: ["sites/api.arolariu.ro/**"]
  workflow_dispatch:
    inputs:
      environment:
        description: "The environment to deploy to. (e.g. 'development', 'production')"
        options:
          - "development"
          - "production"
        default: "production"
        required: true
        type: choice

env:
  API_NAME: "api.arolariu.ro"
  API_URL: "https://api.arolariu.ro"
  COMMIT_SHA: ${{ github.sha }}
  AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
  AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
  AZURE_CLIENT_ID: ${{secrets.AZURE_BACKEND_MANAGED_IDENTITY_CLIENT_ID}}

jobs:
  test:
    name: üß™ Test phase (1/3)
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'production' }}
    timeout-minutes: 10
    steps:
      - name: üõ´ Checking out the branch inside the runner environment...
        uses: actions/checkout@v5.0.0

      - name: üì¶ Installing the .NET runtime...
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: "10.x"

      # - name: üß™ Running unit tests...
      #   run: |
      #     dotnet test --configuration Release --logger trx --results-directory ./TestResults --collect:"XPlat Code Coverage" .\arolariu.slnx

      # - name: üì§ Upload test results...
      #   if: always()
      #   uses: actions/upload-artifact@v4.6.2
      #   with:
      #     name: test-results-${{ github.run_id }}
      #     path: sites/api.arolariu.ro/TestResults/
      #     if-no-files-found: warn
      #     retention-days: 7

  build:
    name: üõ†Ô∏è Build phase (2/3)
    needs: test
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'production' }}
    steps:
      - name: üõ´ Checking out the branch inside the runner environment...
        uses: actions/checkout@v5.0.0

      - name: üîí Performing auth against Azure Public Cloud...
        uses: Azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: üîí Performing auth against private Azure Container Registry...
        uses: Azure/docker-login@v2
        with:
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_ADDRESS }}

      - name: üì¶ Installing the .NET runtime...
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: "10.x"

      - name: üèóÔ∏è Building the docker container...
        env:
          CONTAINER_NAME: "backend/api.arolariu"
          CONTAINER_TAG: ${{ inputs.environment == 'production' && github.sha || 'latest' }}
        run: docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_ADDRESS }}/${{env.CONTAINER_NAME}}:${{env.CONTAINER_TAG}} .

      - name: ‚è´ Pushing the docker container...
        env:
          CONTAINER_NAME: "backend/api.arolariu"
          CONTAINER_TAG: ${{ inputs.environment == 'production' && github.sha || 'latest' }}
        run: docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_ADDRESS }}/${{env.CONTAINER_NAME}}:${{env.CONTAINER_TAG}}

  deploy:
    name: üöÄ Deploy phase (3/3)
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment || 'production' }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: üîí Handling the auth process to Azure Public Cloud...
        uses: Azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: üîí Performing auth against private Azure Container Registry...
        uses: Azure/docker-login@v2
        with:
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_ADDRESS }}

      - name: ‚öì Deploying docker container to Azure App Service...
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3.0.6
        env:
          CONTAINER_NAME: "backend/api.arolariu"
          CONTAINER_TAG: ${{ inputs.environment == 'production' && github.sha || 'latest' }}
        with:
          app-name: "api-arolariu-ro"
          images: "${{ secrets.AZURE_CONTAINER_REGISTRY_ADDRESS }}/${{env.CONTAINER_NAME}}:${{env.CONTAINER_TAG}}"
