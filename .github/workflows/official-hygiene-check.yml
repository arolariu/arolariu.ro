name: "official-hygiene-check"

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: hygiene-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  COMMIT_SHA: ${{ github.sha }}
  BASE_REF: ${{ github.event.pull_request.base.sha || github.event.before || 'origin/main' }}
  HEAD_REF: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  setup:
    name: üß© Setup / Change Detection
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      has-changes: ${{ steps.detect-changes.outputs.has-changes }}
      changed-files: ${{ steps.detect-changes.outputs.changed-files }}
      changed-files-count: ${{ steps.detect-changes.outputs.changed-files-count }}
      base-ref: ${{ env.BASE_REF }}
      head-ref: ${{ env.HEAD_REF }}
    steps:
      - name: üõ´ Checkout repository (full for diff)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ env.HEAD_REF }}

      - name: üì¶ Setup workspace (dependencies & cache)
        uses: ./.github/actions/setup-workspace
        with:
          node-version: '24'
          cache-key-prefix: 'hygiene'

      - name: ÔøΩ Detect changed files (lightweight)
        id: detect-changes
        uses: actions/github-script@v8
        env:
          BASE_REF: ${{ env.BASE_REF }}
          HEAD_REF: ${{ env.HEAD_REF }}
        with:
          script: |
            const {default: detectChangesWrapper} = await import('${{ github.workspace }}/.github/scripts/src/detect-changes-wrapper.js');
            await detectChangesWrapper({github, context, core, exec});

      - name: ÔøΩ (Optional) Post basic change stats to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        env:
          COMMENT_TYPE: "setup"
          PR_NUMBER: ${{ github.event.pull_request.number }}
          CHANGED_FILES_COUNT: ${{ steps.detect-changes.outputs.changed-files-count }}
          CHANGED_FILES: ${{ steps.detect-changes.outputs.changed-files }}
        with:
          script: |
            // Intentionally minimal ‚Äì reuse existing comment builder if extended later
            try {
              const body = `üß© Setup complete. Detected **${process.env.CHANGED_FILES_COUNT}** changed file(s).`;
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: Number(process.env.PR_NUMBER),
                body
              });
            } catch (e) {
              core.warning(`Failed to post setup comment: ${e.message}`);
            }

  formatting:
    name: üé® Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    if: needs.setup.outputs.has-changes == 'true' || github.event_name == 'workflow_dispatch'
    outputs:
      format-needed: ${{ steps.check-format.outputs.format-needed }}
      files-needing-format: ${{ steps.check-format.outputs.files-needing-format }}
      result: ${{ steps.check-format.outputs.result }}
    steps:
      - name: üõ´ Checkout (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          ref: ${{ env.HEAD_REF }}

      - name: üì¶ Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: '24'
          cache-key-prefix: 'hygiene'

      - name: üé® Run formatting check
        id: check-format
        uses: actions/github-script@v8
        env:
          CHECK_MODE: "format"
        with:
          script: |
            const {default: checkCodeHygieneWrapper} = await import('${{ github.workspace }}/.github/scripts/src/check-code-hygiene-wrapper.js');
            await checkCodeHygieneWrapper({github, context, core, exec});

      - name: üí¨ Post formatting comment (only if needed)
        if: github.event_name == 'pull_request' && steps.check-format.outputs.format-needed == 'true'
        uses: actions/github-script@v8
        env:
          COMMENT_TYPE: "formatting"
          PR_NUMBER: ${{ github.event.pull_request.number }}
          FORMAT_NEEDED: ${{ steps.check-format.outputs.format-needed }}
          FILES_NEEDING_FORMAT: ${{ steps.check-format.outputs.files-needing-format }}
        with:
          script: |
            const {default: postHygieneCommentWrapper} = await import('${{ github.workspace }}/.github/scripts/src/post-hygiene-comment-wrapper.js');
            await postHygieneCommentWrapper({github, context, core, exec});

  linting:
    name: üîç Linting
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: setup
    if: needs.setup.outputs.has-changes == 'true' || github.event_name == 'workflow_dispatch'
    outputs:
      lint-passed: ${{ steps.check-lint.outputs.lint-passed }}
      lint-output: ${{ steps.check-lint.outputs.lint-output }}
      result: ${{ steps.check-lint.outputs.result }}
    steps:
      - name: üõ´ Checkout (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          ref: ${{ env.HEAD_REF }}

      - name: üì¶ Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: '24'
          cache-key-prefix: 'hygiene'

      - name: üîç Run lint check
        id: check-lint
        uses: actions/github-script@v8
        env:
          CHECK_MODE: "lint"
        with:
          script: |
            const {default: checkCodeHygieneWrapper} = await import('${{ github.workspace }}/.github/scripts/src/check-code-hygiene-wrapper.js');
            await checkCodeHygieneWrapper({github, context, core, exec});

      - name: üí¨ Post linting comment (only if failed)
        if: github.event_name == 'pull_request' && steps.check-lint.outputs.lint-passed == 'false'
        uses: actions/github-script@v8
        env:
          COMMENT_TYPE: "linting"
          PR_NUMBER: ${{ github.event.pull_request.number }}
          LINT_PASSED: ${{ steps.check-lint.outputs.lint-passed }}
          LINT_OUTPUT: ${{ steps.check-lint.outputs.lint-output }}
        with:
          script: |
            const {default: postHygieneCommentWrapper} = await import('${{ github.workspace }}/.github/scripts/src/post-hygiene-comment-wrapper.js');
            await postHygieneCommentWrapper({github, context, core, exec});

  code-summary:
    name: ÔøΩ Code Summary / Stats
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    if: needs.setup.outputs.has-changes == 'true' || github.event_name == 'workflow_dispatch'
    outputs:
      files-changed: ${{ steps.check-stats.outputs.files-changed }}
      lines-added: ${{ steps.check-stats.outputs.lines-added }}
      lines-deleted: ${{ steps.check-stats.outputs.lines-deleted }}
      has-changes: ${{ steps.check-stats.outputs.has-changes }}
      bundle-size-markdown: ${{ steps.check-stats.outputs.bundle-size-markdown }}
      result: ${{ steps.check-stats.outputs.result }}
    steps:
      - name: üõ´ Checkout (full for diff & bundle compare)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ env.HEAD_REF }}

      - name: üì¶ Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: '24'
          cache-key-prefix: 'hygiene'

      - name: ÔøΩ Compute statistics
        id: check-stats
        uses: actions/github-script@v8
        env:
          CHECK_MODE: "stats"
          HEAD_REF: ${{ env.HEAD_REF }}
        with:
          script: |
            const {default: checkCodeHygieneWrapper} = await import('${{ github.workspace }}/.github/scripts/src/check-code-hygiene-wrapper.js');
            await checkCodeHygieneWrapper({github, context, core, exec});

      - name: üí¨ Post stats comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        env:
          COMMENT_TYPE: "stats"
          PR_NUMBER: ${{ github.event.pull_request.number }}
          FILES_CHANGED: ${{ steps.check-stats.outputs.files-changed }}
          LINES_ADDED: ${{ steps.check-stats.outputs.lines-added }}
          LINES_DELETED: ${{ steps.check-stats.outputs.lines-deleted }}
        with:
          script: |
            const {default: postHygieneCommentWrapper} = await import('${{ github.workspace }}/.github/scripts/src/post-hygiene-comment-wrapper.js');
            await postHygieneCommentWrapper({github, context, core, exec});

  summary:
    name: üìã Consolidated Hygiene Summary
    runs-on: ubuntu-latest
    needs: [setup, formatting, linting, code-summary]
    if: always()
    steps:
      - name: üõ´ Checkout (summary context)
        uses: actions/checkout@v5

      - name: üì¶ Setup workspace (no deps)
        uses: ./.github/actions/setup-workspace
        with:
          node-version: '24'
          install-node-dependencies: 'false'
          cache-key-prefix: 'hygiene'

      - name: üí¨ Post consolidated summary to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        env:
          COMMENT_TYPE: "summary"
          PR_NUMBER: ${{ github.event.pull_request.number }}
          STATS_RESULT: ${{ needs.code-summary.result }}
          FORMATTING_RESULT: ${{ needs.formatting.result }}
          LINTING_RESULT: ${{ needs.linting.result }}
          FILES_CHANGED: ${{ needs.code-summary.outputs.files-changed }}
          LINES_ADDED: ${{ needs.code-summary.outputs.lines-added }}
          LINES_DELETED: ${{ needs.code-summary.outputs.lines-deleted }}
        with:
          script: |
            const {default: postHygieneCommentWrapper} = await import('${{ github.workspace }}/.github/scripts/src/post-hygiene-comment-wrapper.js');
            await postHygieneCommentWrapper({github, context, core, exec});

      - name: ‚úÖ All checks passed
        if: needs.formatting.result == 'success' && needs.linting.result == 'success'
        run: echo "üéâ All code hygiene checks passed successfully!"

      - name: ‚ùå Some checks failed
        if: needs.formatting.result == 'failure' || needs.linting.result == 'failure'
        run: |
          echo "::error::Code hygiene checks failed. Please review the errors above."
          exit 1
