name: "official-hygiene-check"

permissions:
  contents: read          # Read repository contents
  pull-requests: write    # Comment on PRs
  issues: write           # Create issues if needed

on:
  push:
    branches: ["preview", "main"]
  pull_request:
    branches: ["preview", "main"]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: hygiene-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '24'
  DOTNET_VERSION: '10'
  COMMIT_SHA: ${{ github.sha }}
  BASE_REF: ${{ github.event.pull_request.base.sha || github.event.before }}
  HEAD_REF: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  workspace:
    name: 🏗️ Prepare Workspace
    runs-on: ubuntu-latest
    timeout-minutes: 6
    steps:
      - name: 🛫 Checkout (full history for downstream diff)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 🔧 Setup full workspace (Node + .NET + deps)
        uses: ./.github/actions/setup-workspace
        with:
          node-version: ${{ env.NODE_VERSION }}
          dotnet-version: ${{ env.DOTNET_VERSION }}
          fetch-depth: 0
          setup-node: 'true'
          setup-dotnet: 'true'

      - name: 📦 Package dependency artifacts
        run: |
          mkdir -p .github/artifacts
          # Node modules (root). Workspaces resolve from here.
          tar -czf .github/artifacts/node_modules.tar.gz node_modules
          # Preserve lockfile for potential integrity checks downstream.
          cp package.json .github/artifacts/package.json
          cp package-lock.json .github/artifacts/package-lock.json || true

      - name: 📤 Upload workspace artifacts
        uses: actions/upload-artifact@v4
        with:
          name: workspace-deps
          path: .github/artifacts
          retention-days: 1

      - name: ✅ Mark workspace prepared
        id: set-prepared
        run: echo "prepared=true" >> $GITHUB_OUTPUT

  stats:
    name: 📊 Code Statistics
    runs-on: ubuntu-latest
    needs: workspace
    timeout-minutes: 5
    outputs:
      files-changed: ${{ steps.compute.outputs.files-changed }}
      lines-added: ${{ steps.compute.outputs.lines-added }}
      lines-deleted: ${{ steps.compute.outputs.lines-deleted }}
      has-changes: ${{ steps.compute.outputs.has-changes }}
      bundle-size-markdown: ${{ steps.compute.outputs.bundle-size-markdown }}
    steps:
      - name: 🛫 Checkout (full history for diff)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: � Setup Node runtime (no install; reuse artifact)
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Download workspace dependencies
        uses: actions/download-artifact@v4
        with:
          name: workspace-deps
          path: .github/artifacts

      - name: 📦 Extract node modules
        run: |
          tar -xzf .github/artifacts/node_modules.tar.gz

      - name: 📊 Computing the statistics...
        id: compute
        uses: actions/github-script@v8
        env:
          CHECK_MODE: "stats"
          BASE_REF: ${{ env.BASE_REF }}
          HEAD_REF: ${{ env.HEAD_REF }}
          GITHUB_SHA: ${{ github.sha }}
        with:
          script: |
            const {default: checkCodeHygiene} = await import('${{ github.workspace }}/.github/scripts/src/check-code-hygiene.ts');
            await checkCodeHygiene({github, context, core, exec});

  format:
    name: 🎨 Code Formatting
    runs-on: ubuntu-latest
    needs: workspace
    timeout-minutes: 8
    outputs:
      format-needed: ${{ steps.check.outputs.format-needed }}
      files-needing-format: ${{ steps.check.outputs.files-needing-format }}
    steps:
      - name: 🛫 Checkout (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: 🔧 Setup Node runtime (reuse artifact)
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Download workspace dependencies
        uses: actions/download-artifact@v4
        with:
          name: workspace-deps
          path: .github/artifacts

      - name: 📦 Extract node modules
        run: |
          tar -xzf .github/artifacts/node_modules.tar.gz

      - name: 🎨 Checking the formatting...
        id: check
        uses: actions/github-script@v8
        env:
          CHECK_MODE: "format"
          GITHUB_SHA: ${{ github.sha }}
        with:
          script: |
            const {default: checkCodeHygiene} = await import('${{ github.workspace }}/.github/scripts/src/check-code-hygiene.ts');
            await checkCodeHygiene({github, context, core, exec});

  lint:
    name: 🔍 Code Linting
    runs-on: ubuntu-latest
    needs: workspace
    timeout-minutes: 10
    outputs:
      lint-passed: ${{ steps.check.outputs.lint-passed }}
      lint-output: ${{ steps.check.outputs.lint-output }}
    steps:
      - name: 🛫 Checkout (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: 🔧 Setup Node runtime (reuse artifact)
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Download workspace dependencies
        uses: actions/download-artifact@v4
        with:
          name: workspace-deps
          path: .github/artifacts

      - name: 📦 Extract node modules
        run: |
          tar -xzf .github/artifacts/node_modules.tar.gz

      - name: 🔍 Checking the linting...
        id: check
        uses: actions/github-script@v8
        env:
          CHECK_MODE: "lint"
          GITHUB_SHA: ${{ github.sha }}
        with:
          script: |
            const {default: checkCodeHygiene} = await import('${{ github.workspace }}/.github/scripts/src/check-code-hygiene.ts');
            await checkCodeHygiene({github, context, core, exec});

  comment-stats:
    name: 💬 Comment Statistics
    runs-on: ubuntu-latest
    needs: [workspace, stats]
    if: github.event_name == 'pull_request' && needs.stats.outputs.has-changes == 'true'
    timeout-minutes: 3
    steps:
      - name: 🛫 Checkout (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: 🔧 Setup Node runtime
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Download workspace dependencies
        uses: actions/download-artifact@v4
        with:
          name: workspace-deps
          path: .github/artifacts

      - name: 📦 Extract node modules
        run: |
          tar -xzf .github/artifacts/node_modules.tar.gz

      - name: 💬 Post statistics comment
        uses: actions/github-script@v8
        env:
          COMMENT_TYPE: "stats"
          PR_NUMBER: ${{ github.event.pull_request.number }}
          FILES_CHANGED: ${{ needs.stats.outputs.files-changed }}
          LINES_ADDED: ${{ needs.stats.outputs.lines-added }}
          LINES_DELETED: ${{ needs.stats.outputs.lines-deleted }}
          BUNDLE_SIZE_MARKDOWN: ${{ needs.stats.outputs.bundle-size-markdown }}
          GITHUB_SHA: ${{ github.sha }}
        with:
          script: |
            const {default: postHygieneComment} = await import('${{ github.workspace }}/.github/scripts/src/post-hygiene-comment.ts');
            await postHygieneComment({github, context, core, exec});

  comment-format:
    name: 💬 Comment Formatting
    runs-on: ubuntu-latest
    needs: [workspace, format]
    if: github.event_name == 'pull_request' && needs.format.outputs.format-needed == 'true'
    timeout-minutes: 3
    steps:
      - name: 🛫 Checkout (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: 🔧 Setup Node runtime
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Download workspace dependencies
        uses: actions/download-artifact@v4
        with:
          name: workspace-deps
          path: .github/artifacts

      - name: 📦 Extract node modules
        run: |
          tar -xzf .github/artifacts/node_modules.tar.gz

      - name: 💬 Post formatting comment
        uses: actions/github-script@v8
        env:
          COMMENT_TYPE: "formatting"
          PR_NUMBER: ${{ github.event.pull_request.number }}
          FORMAT_NEEDED: ${{ needs.format.outputs.format-needed }}
          FILES_NEEDING_FORMAT: ${{ needs.format.outputs.files-needing-format }}
          GITHUB_SHA: ${{ github.sha }}
        with:
          script: |
            const {default: postHygieneComment} = await import('${{ github.workspace }}/.github/scripts/src/post-hygiene-comment.ts');
            await postHygieneComment({github, context, core, exec});

  comment-lint:
    name: 💬 Comment Linting
    runs-on: ubuntu-latest
    needs: [workspace, lint]
    if: github.event_name == 'pull_request' && needs.lint.outputs.lint-passed == 'false'
    timeout-minutes: 3
    steps:
      - name: 🛫 Checkout (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: 🔧 Setup Node runtime
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Download workspace dependencies
        uses: actions/download-artifact@v4
        with:
          name: workspace-deps
          path: .github/artifacts

      - name: 📦 Extract node modules
        run: |
          tar -xzf .github/artifacts/node_modules.tar.gz

      - name: 💬 Post linting comment
        uses: actions/github-script@v8
        env:
          COMMENT_TYPE: "linting"
          PR_NUMBER: ${{ github.event.pull_request.number }}
          LINT_PASSED: ${{ needs.lint.outputs.lint-passed }}
          LINT_OUTPUT: ${{ needs.lint.outputs.lint-output }}
          GITHUB_SHA: ${{ github.sha }}
        with:
          script: |
            const {default: postHygieneComment} = await import('${{ github.workspace }}/.github/scripts/src/post-hygiene-comment.ts');
            await postHygieneComment({github, context, core, exec});


  summary:
    name: 📋 Hygiene Summary
    runs-on: ubuntu-latest
    needs: [workspace, stats, format, lint]
    if: always()
    timeout-minutes: 3
    steps:
      - name: 🛫 Checkout (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: 🔧 Setup Node runtime
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Download workspace dependencies
        uses: actions/download-artifact@v4
        with:
          name: workspace-deps
          path: .github/artifacts

      - name: 📦 Extract node modules
        run: |
          tar -xzf .github/artifacts/node_modules.tar.gz

      - name: 💬 Post summary comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        env:
          COMMENT_TYPE: "summary"
          PR_NUMBER: ${{ github.event.pull_request.number }}
          STATS_RESULT: ${{ needs.stats.result }}
          FORMAT_RESULT: ${{ needs.format.result }}
          LINT_RESULT: ${{ needs.lint.result }}
          FILES_CHANGED: ${{ needs.stats.outputs.files-changed }}
          LINES_ADDED: ${{ needs.stats.outputs.lines-added }}
          LINES_DELETED: ${{ needs.stats.outputs.lines-deleted }}
          FORMAT_NEEDED: ${{ needs.format.outputs.format-needed }}
          LINT_PASSED: ${{ needs.lint.outputs.lint-passed }}
          GITHUB_SHA: ${{ github.sha }}
        with:
          script: |
            const {default: postHygieneComment} = await import('${{ github.workspace }}/.github/scripts/src/post-hygiene-comment.ts');
            await postHygieneComment({github, context, core, exec});

      - name: ✅ All checks passed
        if: needs.format.result == 'success' && needs.lint.result == 'success' && needs.stats.result == 'success'
        run: |
          echo "🎉 All code hygiene checks passed successfully!"
          echo "📊 Stats: ${{ needs.stats.outputs.files-changed }} files, +${{ needs.stats.outputs.lines-added }} -${{ needs.stats.outputs.lines-deleted }}"
          echo "🎨 Formatting: ✅ No issues"
          echo "🔍 Linting: ✅ No errors"

      - name: ❌ Some checks failed
        if: needs.format.result != 'success' || needs.lint.result != 'success' || needs.stats.result != 'success'
        run: |
          echo "::error::Code hygiene checks failed!"
          echo "📊 Stats: ${{ needs.stats.result }}"
          echo "🎨 Formatting: ${{ needs.format.result }}"
          echo "🔍 Linting: ${{ needs.lint.result }}"
          exit 1
