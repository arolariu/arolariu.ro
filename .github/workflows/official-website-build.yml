name: "official-website-build"

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write

defaults:
  run:
    working-directory: ./sites/arolariu.ro

on:
  push:
    branches: ["preview"]
    paths: ["sites/arolariu.ro/**"]
  workflow_dispatch:
    inputs:
      environment:
        description: "The environment to deploy to. (e.g. 'development', 'production')"
        options:
          - "development"
          - "production"
        default: "development"
        required: true
        type: choice
      infrastructure:
        description: "The infrastructure where it will be deployed (e.g. 'local' or 'azure')"
        options:
          - 'local'
          - 'azure'
        default: "azure"
        required: true
        type: choice
      container_name:
        description: "The name of the container to build and deploy. (e.g. 'frontend/dev.arolariu', 'frontend/arolariu')"
        options:
          - "frontend/dev.arolariu"
          - "frontend/arolariu"
        default: "frontend/dev.arolariu"
        required: true
        type: choice

env:
  COMMIT_SHA: ${{ github.sha }}
  PRODUCTION: ${{ inputs.environment == 'production' && 'true' || 'false' }}
  INFRA: ${{ inputs.infrastructure || 'azure' }}
  AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
  AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
  AZURE_CLIENT_ID: ${{secrets.AZURE_FRONTEND_MANAGED_IDENTITY_CLIENT_ID}}

jobs:
  test:
    if: github.repository == 'arolariu/arolariu.ro'
    name: üß™ Test phase (1/2)
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'development'}}
    timeout-minutes: 10
    steps:
      - name: üõ´ Checking out the branch inside the runner environment...
        uses: actions/checkout@v5

      - name: üîí Performing auth against Azure Public Cloud...
        uses: Azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: üì¶ Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: '24'
          playwright: 'true'
          generate: 'true'
          cache-key-prefix: 'website'

      - name: üß™ Running Jest Unit tests...
        working-directory: './sites/arolariu.ro'
        run: |
          npm ci --prefer-offline --no-audit
          npm run test:unit
        env: # We will use local assets for the tests
          USE_CDN: "false"

      - name: üß™ Running Playwright E2E Component tests...
        working-directory: './sites/arolariu.ro'
        run: |
          npm ci --prefer-offline --no-audit
          npm run test:e2e
        env: # We will use local assets for the tests
          USE_CDN: "false"

      - name: üß™ Preparing UI tests (Building Storybook)...
        working-directory: './sites/arolariu.ro'
        run: |
          npm ci --prefer-offline --no-audit
          npm run storybook:build --quiet
        env: # We will use local assets for the tests
          USE_CDN: "false"

      - name: üì§ Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: test-report-${{ inputs.environment || 'development' }}-${{ github.run_id }}
          path: sites/arolariu.ro/code-cov/
          if-no-files-found: error
          retention-days: 7

      - name: üí¨ Create PR Comment
        uses: actions/github-script@v8
        if: github.event_name == 'push' && github.ref == 'refs/heads/preview'
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_STATUS: ${{ job.status }}
          COMMIT_SHA: ${{ github.sha }}
          RUN_ID: ${{ github.run_id }}
          BRANCH_NAME: ${{ github.ref_name }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Install dependencies required by the script
            const { execSync } = require('child_process');
            execSync('cd .github/scripts && npm ci', { stdio: 'inherit' });

            // Import and execute the wrapper script that uses Node.js 24's native TypeScript support
            const { default: createPRCommentWrapper } = await import('./.github/scripts/src/create-pr-comment-wrapper.js');
            await createPRCommentWrapper({ github, context, core, exec });

      - name: ‚òÇÔ∏è Uploading code coverage report to CodeCov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: "sites/arolariu.ro/code-cov"

  build:
    if: github.repository == 'arolariu/arolariu.ro'
    name: ‚öíÔ∏è Build phase (2/2)
    needs: test
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'development'}}
    steps:
      - name: üõ´ Checking out the branch inside the runner environment...
        uses: actions/checkout@v5

      - name: üîí Performing auth against Azure Public Cloud...
        uses: Azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: üì¶ Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          node-version: '24'
          generate: 'true'
          cache-key-prefix: 'website'

      - name: üîí Performing auth against private Azure Container Registry...
        uses: Azure/docker-login@v2
        with:
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_ADDRESS }}

      - name: üèóÔ∏è Building the docker container...
        env:
          CONTAINER_NAME: ${{inputs.container_name || 'frontend/dev.arolariu'}}
          CONTAINER_TAG: ${{inputs.environment == 'production' && github.sha || 'latest'}}
        run: docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_ADDRESS }}/${{env.CONTAINER_NAME}}:${{env.CONTAINER_TAG}} .

      - name: ‚è´ Pushing the docker container...
        env:
          CONTAINER_NAME: ${{inputs.container_name || 'frontend/dev.arolariu'}}
          CONTAINER_TAG: ${{inputs.environment == 'production' && github.sha || 'latest'}}
        run: docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_ADDRESS }}/${{env.CONTAINER_NAME}}:${{env.CONTAINER_TAG}}
